unit input_produk;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, sComboBox, Buttons, sSpeedButton, sEdit, sLabel,
  sGroupBox, ExtCtrls, sPanel;

type
  Tinput_produkk = class(TForm)
    sPanel1: TsPanel;
    S: TsGroupBox;
    sLabel3: TsLabel;
    lbl_urut: TsLabel;
    sLabel4: TsLabel;
    lbl_kodee: TsLabel;
    sLabel1: TsLabel;
    sLabel2: TsLabel;
    edt_harga: TsEdit;
    sPanel2: TsPanel;
    sGroupBox2: TsGroupBox;
    btn_batal: TsSpeedButton;
    btn_simpbar: TsSpeedButton;
    cmb_jenis: TsComboBox;
    sLabel5: TsLabel;
    sLabel7: TsLabel;
    cmb_warna: TsComboBox;
    cmb_size: TsComboBox;
    lbl_tgl: TsLabel;
    lbl_harga: TsLabel;
    procedure edt_hargaKeyPress(Sender: TObject; var Key: Char);
    procedure edt_hargaExit(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure cmb_jenisClick(Sender: TObject);
    procedure edt_hargaChange(Sender: TObject);
    procedure edt_hargaKeyUp(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure btn_simpbarClick(Sender: TObject);
    procedure btn_batalClick(Sender: TObject);
    procedure cmb_jenisKeyPress(Sender: TObject; var Key: Char);
    procedure cmb_warnaKeyPress(Sender: TObject; var Key: Char);
    procedure cmb_sizeKeyPress(Sender: TObject; var Key: Char);
    procedure FormCreate(Sender: TObject);
    procedure cmb_warnaClick(Sender: TObject);
    procedure cmb_sizeClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function rupiah(sNilai : string): string;
    procedure mrefresh;
    procedure kosong;
    procedure urutkanc;
    procedure perbarui;
    procedure mrefr_log;
    procedure simp_log;
    procedure tampil_cmb;
    procedure edt_log;
    procedure simpanx;
    procedure cek;
  end;

var
  input_produkk: Tinput_produkk;
 kebenaran:Boolean;
implementation

uses koneksi, utama, login, StrUtils, lihat_produk;

{$R *.dfm}

{ Tinput_produkk }

procedure Tinput_produkk.cek;
begin
    if btn_simpbar.Caption='&Simpan' then
  begin
    kebenaran:=true;
    btn_simpbar.Enabled:=false;
  end
  else
  begin
    kebenaran:=false;
  end;
end;

procedure Tinput_produkk.edt_log;
begin
     koneksii.putus;
with koneksii.qr_log do
  begin
      Close;
      SQL.Clear;
      SQL.Text:='INSERT INTO tbl_log([WAKTU],[USER],[AKTIVITAS]) VALUES('+
      QuotedStr(utamaa.lbl_jam.Caption)+','+
      QuotedStr(loginn.lbl_nama_yg_login.Caption)+','+
      QuotedStr('Edit Produk *'+lbl_kodee.Caption+'*')+')';
      ExecSQL;
      mrefr_log;
  end;
end;

procedure Tinput_produkk.kosong;
begin
cmb_jenis.Text:='--- Pilih Jenis ---';
cmb_warna.Text:='--- Pilih Warna ---';
cmb_size.Text:='--- Pilih Size ---';
edt_harga.Text:='1';
cmb_warna.Enabled:=false;
cmb_size.Enabled:=false;
edt_harga.Enabled:=false;
end;

procedure Tinput_produkk.mrefr_log;
begin
    with koneksii.qr_log do
    begin
      Active := False;
      SQL.Clear;
      SQL.Text :='SELECT * FROM `tbl_log`';
      Active := True;
    end;
end;

procedure Tinput_produkk.mrefresh;
begin
  with koneksii.qr_produk do
    begin
      Active := False;
      SQL.Clear;
      SQL.Text :='SELECT * FROM `tbl_produk` ORDER BY `ID` DESC';
      Active := True;
    end;
end;

procedure Tinput_produkk.perbarui;
   var nominalnya:String;
paramxx,rp_nominal:String;
begin
   koneksii.putus;
   nominalnya:=StringReplace(edt_harga.Text,',','',[rfReplaceAll,rfIgnoreCase]); 
   paramxx := AnsiReplaceStr(nominalnya,'.','');
   rp_nominal := 'Rp'+rupiah(paramxx)+',00';

   with koneksii.qr_produk do
  begin
      close;
      SQL.Clear;
      SQL.Text := ' UPDATE tbl_produk SET ' +
                  ' JENIS_PRODUK = '+QuotedStr(cmb_jenis.Text)+','+
                  ' WARNA_PRODUK = '+QuotedStr(cmb_warna.Text)+','+

                  ' [SIZE] = '+QuotedStr(cmb_size.Text)+','+
                  ' HARGA_ = '+QuotedStr(nominalnya)+','+
                  ' RP_HARGA = '+QuotedStr(rp_nominal)+','+
                  ' WAKTU = '+QuotedStr(utamaa.lbl_jam.Caption)+','+
                  ' OLEH = '+QuotedStr(loginn.lbl_nama_yg_login.Caption)+','+
                  ' TGL = '+QuotedStr(lbl_tgl.Caption)+
                  ' WHERE KODE_PRODUK = ' +QuotedStr(lbl_kodee.Caption);
      ExecSQL;
      mrefresh;
  end;
end;

function Tinput_produkk.rupiah(sNilai: string): string;
   var
i, p : Longint;
sHasil, sKi : string;
begin
  p := Length(Trim(sNilai));
  while (p mod 3 <> 0) do
    begin
      sNilai := '0'+ sNilai;
      p := Length(sNilai);
    end;
  sHasil := '';
  for i := 1 to p do
    begin
      if (i mod 3 = 0) then
        begin
          sHasil := shasil + '.'+Copy(sNilai, i - 2, 3);
        end;
    end;
    p := Length(sHasil);
    sHasil := Copy(sHasil, 2, p);
    sKi := Copy(sHasil, 1, 3);
    sKi := IntToStr(StrToInt(sKi));
    sHasil := sKi + Copy(sHasil, 4, p);
    Result := sHasil;
end;

procedure Tinput_produkk.simp_log;
begin
   koneksii.putus;
with koneksii.qr_log do
  begin
      Close;
      SQL.Clear;
      SQL.Text:='INSERT INTO tbl_log([WAKTU],[USER],[AKTIVITAS]) VALUES('+
      QuotedStr(utamaa.lbl_jam.Caption)+','+
      QuotedStr(loginn.lbl_nama_yg_login.Caption)+','+
      QuotedStr('Input Produk *'+lbl_kodee.Caption+'*')+')';
      ExecSQL;
      mrefr_log;
  end;
end;

procedure Tinput_produkk.simpanx;
  var nominalnya:String;
paramxx,rp_nominal:String;
begin
   koneksii.putus;
   nominalnya:=StringReplace(edt_harga.Text,',','',[rfReplaceAll,rfIgnoreCase]); ;
   //nominal rp
   paramxx := AnsiReplaceStr(nominalnya,'.','');
   rp_nominal := 'Rp'+rupiah(paramxx)+',00';
with koneksii.qr_produk do
  begin
      Close;
      SQL.Clear;
      SQL.Text:='INSERT INTO tbl_produk(KODE_PRODUK,JENIS_PRODUK,WARNA_PRODUK,[SIZE],HARGA_,RP_HARGA,WAKTU,OLEH,TGL) VALUES('+
      QuotedStr(lbl_kodee.Caption)+','+
      QuotedStr(cmb_jenis.Text)+','+
      QuotedStr(cmb_warna.Text)+','+
      QuotedStr(cmb_size.Text)+','+
      QuotedStr(nominalnya)+','+
      QuotedStr(rp_nominal)+','+
      QuotedStr(utamaa.lbl_jam.Caption)+','+
      QuotedStr(loginn.lbl_nama_yg_login.Caption)+','+
      QuotedStr(lbl_tgl.Caption)+')';
      ExecSQL;
      mrefresh;
  end;
end;

procedure Tinput_produkk.tampil_cmb;
begin

with koneksii do
  begin
     qr_jenis_produk.Active:=false;
     qr_jenis_produk.SQL.Clear;
     qr_jenis_produk.SQL.Text:='SELECT distinct(`JENIS_PRODUK`) FROM tbl_jenis_produk';
     qr_jenis_produk.Active:=true;
     qr_jenis_produk.First;
     cmb_jenis.Clear;
     cmb_jenis.Text:='--- Pilih Jenis ---';
          while not qr_jenis_produk.Eof do
            begin
              cmb_jenis.Items.Add(qr_jenis_produk.fieldbyname('JENIS_PRODUK').AsString);
              qr_jenis_produk.Next;
            end;
   end;


with koneksii do
  begin
     qr_warna.Active:=false;
     qr_warna.SQL.Clear;
     qr_warna.SQL.Text:='SELECT distinct(`WARNA`) FROM tbl_warna';
     qr_warna.Active:=true;
     qr_warna.First;
     cmb_warna.Clear;
     cmb_warna.Text:='--- Pilih Warna ---';
          while not qr_warna.Eof do
            begin
              cmb_warna.Items.Add(qr_warna.fieldbyname('WARNA').AsString);
              qr_warna.Next;
            end;
   end;

with koneksii do
  begin
     qr_size.Active:=false;
     qr_size.SQL.Clear;
     qr_size.SQL.Text:='SELECT distinct(`SIZE`) FROM tbl_size';
     qr_size.Active:=true;
     qr_size.First;
     cmb_size.Clear;
     cmb_size.Text:='--- Pilih Size ---';
          while not qr_size.Eof do
            begin
              cmb_size.Items.Add(qr_size.fieldbyname('SIZE').AsString);
              qr_size.Next;
            end;
   end;
end;


procedure Tinput_produkk.urutkanc;
 var  akhir: integer;
  kode:String;
begin

 with koneksii.qr_produk do
   begin
      if RecordCount <> 0 then
      begin
        First;
        akhir := FieldValues['ID'];
    //    akhir := akhir + 1;
        inc(akhir);
        if Length(FieldValues['ID']) = 1 then
          begin
            kode := ('KP-00' + IntToStr(akhir));
          end
        else if Length(FieldValues['ID']) = 2 then
          begin
            kode := ('KP-0' + IntToStr(akhir));
          end
        else if Length(FieldValues['ID']) = 3 then
          begin
            kode := ('KP-' + IntToStr(akhir));
          end
      end
      else if (RecordCount = 0) then
        begin
        kode := ('KP-001');
      end;
  end;
      if kebenaran=false then
        begin

        end
      else if kebenaran=true then
        begin
          lbl_kodee.Caption:=kode;
          lbl_urut.Caption:=kode;
        end;
end;

procedure Tinput_produkk.edt_hargaKeyPress(Sender: TObject; var Key: Char);
begin
if not(key in['0'..'9',#9,#8]) then
  begin
    Key:=#0;
    Beep;
  end;
end;

procedure Tinput_produkk.edt_hargaExit(Sender: TObject);
begin
if (edt_harga.Text='') or(edt_harga.Text=' ') then
  begin
    edt_harga.Text:='1';
  end
end;

procedure Tinput_produkk.FormShow(Sender: TObject);
begin
cek;
   lbl_tgl.Caption:=DateToStr(date);
end;

procedure Tinput_produkk.cmb_jenisClick(Sender: TObject);
begin
   cmb_warna.Enabled:=true;
   cmb_warna.SetFocus;
   cmb_size.Enabled:=true;
   edt_harga.Enabled:=true;
end;

procedure Tinput_produkk.edt_hargaChange(Sender: TObject);
begin
btn_simpbar.Enabled:=true;
if (edt_harga.Text='') or(edt_harga.Text=' ') then
  begin
    edt_harga.Text:='1';
  end
  else
  begin
    end;
end;

procedure Tinput_produkk.edt_hargaKeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  sRupiah: string;
  iRupiah: Currency;

begin
  //ribuan --> currency ( menyesuaikan setting windows )
  sRupiah := edt_harga.Text;
  sRupiah := StringReplace(sRupiah,',','',[rfReplaceAll,rfIgnoreCase]); // hilangkan char koma , pemisah //ribuan selain IDR
  sRupiah := StringReplace(sRupiah,'.','',[rfReplaceAll,rfIgnoreCase]); //remove char titik .    pemisah //ribuan IDR
 iRupiah := StrToCurrDef(sRupiah,0); // convert srupiah ke currency

  //currency --> format ribuan
  edt_harga.Text := FormatCurr('#,###',iRupiah);
  edt_harga.SelStart := length(edt_harga.text);
end;

procedure Tinput_produkk.btn_simpbarClick(Sender: TObject);
begin
if (btn_simpbar.Caption='&Simpan') then
Begin
  if (cmb_jenis.Text:='--- Pilih Jenis ---')or(cmb_size.Text='--- Pilih Warna ---') or(cmb_warna.Text='--- Pilih Size ---') then
    begin
      Application.MessageBox('Field Belum Lengkap!','Peringatan',MB_ICONWARNING);
    end
  else
    begin
      simp_log;
      simpanx;
      Application.MessageBox('Data Pengeluaran Telah Tersimpan','Informasi',MB_ICONINFORMATION);
      kosong;
      cmb_jenis.SetFocus;
      btn_simpbar.Enabled:=false;
      mrefresh;
      urutkanc;
    end;
End
else
begin
  if (cmb_jenis.Text:='--- Pilih Jenis ---')or(cmb_size.Text='--- Pilih Warna ---') or(cmb_warna.Text='--- Pilih Size ---') then
    begin
      Application.MessageBox('Field Belum Lengkap!','Peringatan',MB_ICONWARNING);
    end
  else
    begin
      perbarui;
      edt_log;
      Application.MessageBox('Data Pengeluaran Telah Diperbaharui','Informasi',MB_ICONINFORMATION);
      kosong;
      btn_simpbar.Enabled:=false;
      input_produkk.Close;
      mrefresh;
      with lihat_produkk do
        begin
          close;
          ManualDock(utamaa.pnl_utama);
          WindowState := wsMaximized;
          Show;
        end
    end;
end;
end;

procedure Tinput_produkk.btn_batalClick(Sender: TObject);
begin

kosong;
  mrefresh;
  close;
end;

procedure Tinput_produkk.cmb_jenisKeyPress(Sender: TObject; var Key: Char);
begin
if not(key=#27) then
  begin
    Key:=#0;
    Beep;
  end;
end;

procedure Tinput_produkk.cmb_warnaKeyPress(Sender: TObject; var Key: Char);
begin
if not(key=#27) then
  begin
    Key:=#0;
    Beep;
  end;
end;

procedure Tinput_produkk.cmb_sizeKeyPress(Sender: TObject; var Key: Char);
begin
if not(key=#27) then
  begin
    Key:=#0;
    Beep;
  end;
end;

procedure Tinput_produkk.FormCreate(Sender: TObject);
begin
tampil_cmb;
end;

procedure Tinput_produkk.cmb_warnaClick(Sender: TObject);
begin
  cmb_size.SetFocus;
end;

procedure Tinput_produkk.cmb_sizeClick(Sender: TObject);
begin
edt_harga.SetFocus;
end;

end.
